<%= autogenerated %>
package <%= root_package %>.models;

import java.io.IOException;
import java.util.Set;

import <%= root_package %>.I<%= db_name %>;

import com.rapleaf.java_active_record.ModelWithId;
import com.rapleaf.java_active_record.BelongsToAssociation;
import com.rapleaf.java_active_record.HasManyAssociation;
import com.rapleaf.java_active_record.HasOneAssociation;

import <%= project_defn.databases_namespace %>.IDatabases;

<% model_defn.associations.each do |a| %>
<% if a.assoc_model.database_defn != model_defn.database_defn %>
<%= a.assoc_model.import %> 
<% end %>
<% end %>

public class <%=model_defn.model_name%> extends ModelWithId {
  // Fields
  <% model_defn.fields.each do |field_defn| %>
  private <%= field_defn.java_type %> __<%= field_defn.name %>;
  <% end %>

  // Associations
  <% model_defn.associations.each do |assoc| %>
  private final <%= assoc.java_type %> <%= assoc.field_name %>;
  <% end %>

  public <%= model_defn.model_name %>(long id<%= create_signature_full.empty? ? "" : ", " %><%= create_signature_full %>, IDatabases databases) {
    super(id);
  <% model_defn.fields.each do |field_defn| %>
    this.__<%= field_defn.name %> = <%= field_defn.name %>;
  <% end %>
  
  <% model_defn.associations.each do |assoc| %>
    this.<%= assoc.field_name %> = <%= assoc.constructor_call %>;
  <% end %>
  }

<% model_defn.fields.each do |field_defn| %>

  public <%= field_defn.java_type %> <%= field_defn.getter %>{
    return __<%= field_defn.name %>;
  }

  public void set<%= camelize(field_defn.name) %>(<%= field_defn.java_type %> newval){
    this.__<%= field_defn.name %> = newval;
  }
<% end %>

<% model_defn.associations.each do |a| %>
  
  public <%= a.assoc_getter_type %> <%= a.assoc_getter %>() throws IOException {
    return <%= a.field_name %>.get();
  }
<% end %>
}
